# Use the Ubuntu base image
FROM node:18

# Install Fluvio
RUN curl -fsS https://hub.infinyon.cloud/install/install.sh?ctx=dc | bash

# Set up environment variables in .bashrc
RUN echo 'export PATH="$HOME/.fluvio/bin:$HOME/.fvm/bin:$PATH"' >> ~/.bashrc && \
    echo 'source "${HOME}/.fvm/env"' >> ~/.bashrc

# Source .bashrc to ensure the environment variables are loaded
RUN /bin/bash -c "source ~/.bashrc"

# Ensure correct permissions for the Fluvio binaries
RUN chmod +x /root/.fluvio/bin/* /root/.fvm/bin/*

# Set the PATH (useful if running commands outside of an interactive shell)
ENV PATH="$PATH:/root/.fluvio/bin:/root/.fvm/bin"


# Set the working directory for your app
WORKDIR /app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install Node.js dependencies
RUN npm install

# Copy the rest of your application code
COPY . .

# Start Fluvio Cluster
RUN fluvio cluster start

# Install Rust and Setup up environment variables in .bashrc
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Install WASM target
RUN rustup target add wasm32-wasip1

# Copy Rust smartmodule
COPY utils/fluvio/listening-history-module/ utils/fluvio/listening-history-module/

# Build the SmartModule (WASM)
WORKDIR /utils/fluvio/listening-history-module
RUN cargo build --target wasm32-wasip1 --release

# Build and load SmartModule Development Kit from the current directory
RUN smdk build && smdk load

# Set the entrypoint
# Expose the port your app runs on
EXPOSE 8000



CMD [ "npm","run","server" ]